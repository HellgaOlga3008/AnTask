openapi: 3.0.1
info:
  title: Управление корзиной Клиента
  description: |
    Апи позволяет просматривать (в том числе контекстно), удалять и добавлять позиции
    товаров.
  version: 1.0.0
tags:
  - name: private
    description: |
      Приватные пути, используемые сервисом Корзины клиента, не могут
      быть использованы сторонними сервисами.
  - name: common
    description: |
      Общие пути, использование которых доступно как сервисом Корзины клиента,
      так и сторонними сервисами.

paths:
  /v1/basket/browse:
    get:
      tags:
        - common
      summary: Просмотр корзины клиента
      description: |
        Позволяет просмотреть корзину клиента (его заказ). В зависимости от идентификатора,
        передается либо полное состояние корзины (для Сервиса Корзины), либо
        контекстное состояние корзины (товары, принадлежащие конкретной группе).
      operationId: getCustomerBasket
      parameters:
        - name: RqUID
          description: Уникальный идентификатор запроса
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: OperUID
          description: |
            Уникальный идентификатор подзапроса. При первом запросе заполняется
            значением RqUID. При повторной попытке запроса заполняется значением
            RqUID первого запроса.
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: spName
          description: Идентификатор вызывающей системы
          in: query
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 100
            pattern: ^[A-Za-z0-9_:\-]{1,100}$
        - name: rqTime
          description: Время направления запроса
          in: query
          required: true
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowseBasketRs'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/basket/modify:
    put:
      tags:
        - common
      summary: Управление корзиной клиента
      description: |
        Позволяет изменить состояние корзины клиента (его заказа) в отношении 
        конкретной позиции в Корзине.
      operationId: modCustomerBasket
      parameters:
        - name: RqUID
          description: Уникальный идентификатор запроса
          in: header
          required: true
          schema:
            type: string
            format: uuid
        - name: OperUID
          description: |
            Уникальный идентификатор подзапроса. При первом запросе заполняется
            значением RqUID. При повторной попытке запроса заполняется значением
            RqUID первого запроса.
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: spName
          description: Идентификатор вызывающей системы
          in: query
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 100
            pattern: ^[A-Za-z0-9_:\-]{1,100}$
        - name: rqTime
          description: Время направления запроса
          in: query
          required: true
          schema:
            type: string
            format: date-time
      requestBody:
        description: Запрос на обновление состояния конкретной позиции.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModCustomerBasketRq'
      responses:
        200:
          description: |
            Возвращает состояние измененной позиции позиции. Таким образом
            массив позиций payload будет состоять из одного элемента.
            В случае, если в корзине не останется изменяемой позиции, массив
            payload будет возвращен пустым.
            В случае, если сигнал будет "водить позицию в минус", массив payload
            будет возвращен пустым.
            Если массив payload был возвращен пустым, это значит, что позиция
            была удалена из корзины.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrowseBasketRs'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        

components:
  schemas:
    ModCustomerBasketRq:
      type: object
      description: Тело запроса на обновление состояния конкретной позиции в заказе
      properties:
        productID:
          type: string
          description: Идентификатор товара
          format: uuid
        quantity:
          type: string
          description: |
            Количество позиции. Может быть целочисленным, и с плавающей точкой.
          minLength: 1
          maxLength: 20
          pattern: ^[0-9]+\.?((?<=[.])[0-9]{0,4})?$
        opType:
          type: string
          description: |
            Тип выполняемой операции.
            'add' - увеличить на заданное количество;
            'sub' - уменьшить на заданное количество;
          enum:
            - add
            - sub
      required:
        - productID
        - quantity
        - opType
      additionalProperties: false

    BrowseBasketRs:
      type: object
      description: Ответ на запрос состояния корзины Клиента.
      properties:
        operUID:
          type: string
          description: |
            Уникальный идентификатор подзапроса, ответ на который сформирован.
          format: uuid
        systemId:
          type: string
          description: Идентикатор вызвавшей системы.
          minLength: 1
          maxLength: 100
          pattern: ^[A-Za-z0-9_:\-]{1,100}$
        status:
          $ref: '#/components/schemas/Status'
        payload:
          type: array
          description: Список позиций заказа
          minItems: 0
          maxItems: 1024
          items:
            $ref: '#/components/schemas/BasketEntry'
      required:
        - operUID
        - systemId
        - status
        - payload
      additionalProperties: false

    BasketEntry:
      type: object
      description: Запись из заказа.
      properties:
        productID:
          type: string
          description: Идентификатор товара
          format: uuid
        quantity:
          type: string
          description: |
            Количество позиции. Может быть целочисленным, и с плавающей точкой.
          minLength: 1
          maxLength: 20
          pattern: ^[0-9]+\.?((?<=[.])[0-9]{0,4})?$
        unit:
          type: string
          description: |
            Тип единицы измерения.
            'piece' - штука;
            'meter' - метр;
            'liter' - литр;
            'kilo' - килограмм
          enum:
            - piece
            - meter
            - liter
            - kilo
        productGroups:
          type: array
          description: Список категорий, к которым принадлежит товар.
          minItems: 1
          maxItems: 1024
          items:
            type: string
            description: Именование категории товара
            minLength: 1
            maxLength: 100
            pattern: ^[A-Za-z_\-]$
      required:
        - productID
        - quantity
        - unit
      additionalProperties: false

    ErrorResponse:
      type: object
      description: Ошибочный запрос
      properties:
        operUID:
          type: string
          description: Уникальный идентификатор подзапроса (При первом запросе заполняется
            RqUID, при повторной попытке запроса заполняется RqUID первого запроса)
          format: uuid
        rqTm:
          type: string
          description: Время отправки запроса
          format: date-time
        status:
          $ref: '#/components/schemas/Status'
      required:
        - rqTime
        - status
      additionalProperties: false

    Status:
      type: object
      description: Статус выполнения запроса
      properties:
        statusCode:
          type: string
          description: |
            * `success` - Выполнено без ошибок,
            * `error` - Ошибка при выполнение запроса,
            * `internal_error` - Внутренняя ошибка сервиса,
            * `bad_request` - Некорректный запрос,
            * `unauthorized` - Неавторизованный пользователь
          example: "success"
          enum:
            - "success"
            - "error"
            - "internal_error"
            - "bad_request"
            - "unauthorized"
        statusDesc:
          type: string
          description: Текст сообщения
          maxLength: 255
          pattern: ^(.*)$
          example: "Выполнено без ошибок"
      required:
        - statusCode
      additionalProperties: false
